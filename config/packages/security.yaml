security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:

        main:
            anonymous: true
            lazy: true
            provider:
                app_user_provider

        login:
            pattern: ^/api/v1/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /api/v1/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email
                password_path: password

        public:
            pattern: ^/api/v1
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        api:
            pattern: ^/api/v1
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator



    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/api/v1, roles: ROLE_USER, methods: [PUT, DELETE]}
#        - { path: ^/api/v1, roles: ROLE_USER }
#        - { path: ^/api/v1, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/v1, roles: IS_AUTHENTICATED_ANONYMOUSLY_METHODS, methods: [GET] }
#        - { path: ^/api/v1,       roles: ROLE_USER_METHODS, methods: [PUT, DELETE] }
